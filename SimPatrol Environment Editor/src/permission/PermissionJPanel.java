/* PermissionJPanel.java */

/** The package of this class. */
package permission;

/* Imported classes and/or interfaces. */
import java.util.LinkedList;
import javax.swing.JDialog;
import limitation.LimitationGUI;
import model.limitation.AccelerationLimitation;
import model.limitation.DepthLimitation;
import model.limitation.Limitation;
import model.limitation.SpeedLimitation;
import model.limitation.StaminaLimitation;
import model.permission.Permission;

/** Implements the GUI panel able to configure
 *  Permission objects.
 *  
 *  @see Permission */
public class PermissionJPanel extends javax.swing.JPanel {    
	/* Methods. */
    /** Constructor.
     * 
     *  @param owner The GUI that contains this panel.
     *  @param permission The Permission object to be configured.
     *  @param stamina_visibility TRUE if the stamina_limitation internal panel must appear, FALSE if not.
     *  @param speed_visibility TRUE if the speed_limitation internal panel must appear, FALSE if not.
     *  @param acceleration_visibility TRUE if the acceleration_limitation internal panel must appear, FALSE if not. */
    public PermissionJPanel(JDialog owner, Permission permission, boolean depth_visibility, boolean stamina_visibility, boolean speed_visibility, boolean acceleration_visibility) {
        this.initComponents();
        this.initComponents2(owner, permission, depth_visibility, stamina_visibility, speed_visibility, acceleration_visibility);
    }
    
    /** Initiates the components of the GUI.
     *  Generated by NetBeans IDE 3.6. */
    private void initComponents() {//GEN-BEGIN:initComponents
        internal_panel = new javax.swing.JPanel();
        acceleration_limitation_panel = new javax.swing.JPanel();
        acceleration_check = new javax.swing.JCheckBox();
        acceleration_edit_button = new javax.swing.JButton();
        depth_limitation_panel = new javax.swing.JPanel();
        depth_check = new javax.swing.JCheckBox();
        depth_edit_button = new javax.swing.JButton();
        stamina_limitation_panel = new javax.swing.JPanel();
        stamina_check = new javax.swing.JCheckBox();
        stamina_edit_button = new javax.swing.JButton();
        speed_limitation_panel = new javax.swing.JPanel();
        speed_check = new javax.swing.JCheckBox();
        speed_edit_button = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        internal_panel.setLayout(new java.awt.GridLayout(4, 0));

        depth_limitation_panel.setLayout(new java.awt.BorderLayout());

        depth_check.setText("Depth limitation");
        depth_check.setEnabled(false);
        depth_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                depth_checkItemStateChanged(evt);
            }
        });

        depth_limitation_panel.add(depth_check, java.awt.BorderLayout.CENTER);

        depth_edit_button.setText("Edit");
        depth_edit_button.setEnabled(false);        
        depth_edit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depth_edit_buttonActionPerformed(evt);
            }
        });

        depth_limitation_panel.add(depth_edit_button, java.awt.BorderLayout.EAST);

        internal_panel.add(depth_limitation_panel);

        stamina_limitation_panel.setLayout(new java.awt.BorderLayout());

        stamina_check.setText("Stamina limitation");
        stamina_check.setEnabled(false);
        stamina_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stamina_checkItemStateChanged(evt);
            }
        });

        stamina_limitation_panel.add(stamina_check, java.awt.BorderLayout.CENTER);

        stamina_edit_button.setText("Edit");
        stamina_edit_button.setEnabled(false);
        stamina_edit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stamina_edit_buttonActionPerformed(evt);
            }
        });

        stamina_limitation_panel.add(stamina_edit_button, java.awt.BorderLayout.EAST);

        internal_panel.add(stamina_limitation_panel);
        
        speed_limitation_panel.setLayout(new java.awt.BorderLayout());

        speed_check.setText("Speed limitation");
        speed_check.setEnabled(false);
        speed_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                speed_checkItemStateChanged(evt);
            }
        });

        speed_limitation_panel.add(speed_check, java.awt.BorderLayout.CENTER);

        speed_edit_button.setText("Edit");
        speed_edit_button.setEnabled(false);
        speed_edit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speed_edit_buttonActionPerformed(evt);
            }
        });

        speed_limitation_panel.add(speed_edit_button, java.awt.BorderLayout.EAST);

        internal_panel.add(speed_limitation_panel);
        
        acceleration_limitation_panel.setLayout(new java.awt.BorderLayout());

        acceleration_check.setText("Acceleration limitation");
        acceleration_check.setEnabled(false);
        acceleration_check.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
            	acceleration_checkItemStateChanged(evt);
            }
        });

        acceleration_limitation_panel.add(acceleration_check, java.awt.BorderLayout.CENTER);

        acceleration_edit_button.setText("Edit");
        acceleration_edit_button.setEnabled(false);
        acceleration_edit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	acceleration_edit_buttonActionPerformed(evt);
            }
        });

        acceleration_limitation_panel.add(acceleration_edit_button, java.awt.BorderLayout.EAST);

        internal_panel.add(acceleration_limitation_panel);

        add(internal_panel, java.awt.BorderLayout.NORTH);
    }//GEN-END:initComponents
    
    /** Complements the initiation of the components of the GUI.
     * 
     *  @param owner The GUI that contains this panel.
     *  @param permission The Permission object to be configured.
     *  @param depth_visibility TRUE if the depth_limitation internal panel must appear, FALSE if not.
     *  @param stamina_visibility TRUE if the stamina_limitation internal panel must appear, FALSE if not.
     *  @param speed_visibility TRUE if the speed_limitation internal panel must appear, FALSE if not.
     *  @param acceleration_visibility TRUE if the acceleration_limitation internal panel must appear, FALSE if not. */
    private void initComponents2(JDialog owner, Permission permission, boolean depth_visibility, boolean stamina_visibility, boolean speed_visibility, boolean acceleration_visibility) {
    	this.owner = owner;
    	this.permission = permission;
    	    	    
    	Limitation[] limitations = permission.getLimitations();
        for(int i = 0; i < limitations.length; i++)
        	if(limitations[i] instanceof DepthLimitation) {
        		this.depth_limitation = (DepthLimitation) limitations[i];
        		this.depth_check.setSelected(true);
        		this.depth_edit_button.setEnabled(true);
        	}
        	else if(limitations[i] instanceof StaminaLimitation) {
        		this.stamina_limitation = (StaminaLimitation) limitations[i];
        		this.stamina_check.setSelected(true);
        		this.stamina_edit_button.setEnabled(true);
        	}
        	else if(limitations[i] instanceof SpeedLimitation) {
        		this.speed_limitation = (SpeedLimitation) limitations[i];
        		this.speed_check.setSelected(true);
        		this.speed_edit_button.setEnabled(true);
        	}
        	else {
        		this.acceleration_limitation = (AccelerationLimitation) limitations[i];
        		this.acceleration_check.setSelected(true);
        		this.acceleration_edit_button.setEnabled(true);
        	}
        
        this.depth_check.setEnabled(true);
        this.depth_limitation_panel.setVisible(depth_visibility);
        
        this.stamina_check.setEnabled(true);
        this.stamina_limitation_panel.setVisible(stamina_visibility);
        
        this.speed_check.setEnabled(true);
        this.speed_limitation_panel.setVisible(speed_visibility);
        
        this.acceleration_check.setEnabled(true);        
        this.acceleration_limitation_panel.setVisible(acceleration_visibility);
    }
    
    /** Executed when the depth_check object changes.
     *  Generated by NetBeans IDE 3.6. */
    private void stamina_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stamina_checkItemStateChanged
        if(this.stamina_check.isEnabled() && this.stamina_check.isSelected()) {
        	if(this.stamina_limitation == null)
        		this.stamina_limitation = new StaminaLimitation(0);
        	
        	this.limitation_gui = new LimitationGUI(this.owner, this.stamina_limitation);
            this.limitation_gui.setVisible(true);
            
            Limitation limitation = this.limitation_gui.getLimitation();
            if(limitation != null) {
            	this.stamina_limitation = (StaminaLimitation) limitation;
            	this.stamina_edit_button.setEnabled(true);
            }
            else {
            	this.stamina_check.setSelected(false);
            	this.stamina_edit_button.setEnabled(false);
            }
        }
        else this.stamina_edit_button.setEnabled(false);
    }//GEN-LAST:event_stamina_checkItemStateChanged

    /** Executed when the depth_check object changes.
     *  Generated by NetBeans IDE 3.6. */
    private void depth_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_depth_checkItemStateChanged
       if(this.depth_check.isEnabled() && this.depth_check.isSelected()) {
        	if(this.depth_limitation == null)
        		this.depth_limitation = new DepthLimitation(0);
    	   
    	   this.limitation_gui = new LimitationGUI(this.owner, this.depth_limitation);
            this.limitation_gui.setVisible(true);
            
            Limitation limitation = this.limitation_gui.getLimitation();
            if(limitation != null) {
            	this.depth_limitation = (DepthLimitation) limitation;
            	this.depth_edit_button.setEnabled(true);
            }
            else {
            	this.depth_check.setSelected(false);
            	this.depth_edit_button.setEnabled(false);
            }
        }
        else this.depth_edit_button.setEnabled(false);
    }//GEN-LAST:event_depth_checkItemStateChanged
    
    /** Executed when the speed_check object changes.
     *  Generated by NetBeans IDE 3.6. */
    private void speed_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_speed_checkItemStateChanged
       if(this.speed_check.isEnabled() && this.speed_check.isSelected()) {
        	if(this.speed_limitation == null)
        		this.speed_limitation = new SpeedLimitation(1);
    	   
    	   this.limitation_gui = new LimitationGUI(this.owner, this.speed_limitation);
            this.limitation_gui.setVisible(true);
            
            Limitation limitation = this.limitation_gui.getLimitation();
            if(limitation != null) {
            	this.speed_limitation = (SpeedLimitation) limitation;
            	this.speed_edit_button.setEnabled(true);
            }
            else {
            	this.speed_check.setSelected(false);
            	this.speed_edit_button.setEnabled(false);
            }
        }
        else this.speed_edit_button.setEnabled(false);
    }//GEN-LAST:event_speed_checkItemStateChanged
    
    /** Executed when the acceleration_check object changes.
     *  Generated by NetBeans IDE 3.6. */
    private void acceleration_checkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_acceleration_checkItemStateChanged
       if(this.acceleration_check.isEnabled() && this.acceleration_check.isSelected()) {
        	if(this.acceleration_limitation == null)
        		this.acceleration_limitation = new AccelerationLimitation(1);
    	   
    	   this.limitation_gui = new LimitationGUI(this.owner, this.acceleration_limitation);
            this.limitation_gui.setVisible(true);
            
            Limitation limitation = this.limitation_gui.getLimitation();
            if(limitation != null) {
            	this.acceleration_limitation = (AccelerationLimitation) limitation;
            	this.acceleration_edit_button.setEnabled(true);
            }
            else {
            	this.acceleration_check.setSelected(false);
            	this.acceleration_edit_button.setEnabled(false);
            }
        }
        else this.acceleration_edit_button.setEnabled(false);
    }//GEN-LAST:event_acceleration_checkItemStateChanged
    
    /** Executed when the stamina_edit_button is pressed.
     *  Generated by NetBeans IDE 3.6. */
    private void stamina_edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stamina_edit_buttonActionPerformed
        this.limitation_gui = new LimitationGUI(this.owner, this.stamina_limitation);
        this.limitation_gui.setVisible(true);
        
        Limitation limitation = this.limitation_gui.getLimitation();
        if(limitation != null)
        	this.stamina_limitation = (StaminaLimitation) limitation;
    }//GEN-LAST:event_stamina_edit_buttonActionPerformed
    
    
    /** Executed when the depth_edit_button is pressed.
     *  Generated by NetBeans IDE 3.6. */
    private void depth_edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depth_edit_buttonActionPerformed
    	this.limitation_gui = new LimitationGUI(this.owner, this.depth_limitation);
        this.limitation_gui.setVisible(true);
        
        Limitation limitation = this.limitation_gui.getLimitation();
        if(limitation != null)
        	this.depth_limitation = (DepthLimitation) limitation;
    }//GEN-LAST:event_depth_edit_buttonActionPerformed
    
    /** Executed when the speed_edit_button is pressed.
     *  Generated by NetBeans IDE 3.6. */
    private void speed_edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speed_edit_buttonActionPerformed
    	this.limitation_gui = new LimitationGUI(this.owner, this.speed_limitation);
        this.limitation_gui.setVisible(true);
        
        Limitation limitation = this.limitation_gui.getLimitation();
        if(limitation != null)
        	this.speed_limitation = (SpeedLimitation) limitation;
    }//GEN-LAST:event_speed_edit_buttonActionPerformed
    
    /** Executed when the acceleration_edit_button is pressed.
     *  Generated by NetBeans IDE 3.6. */
    private void acceleration_edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceleration_edit_buttonActionPerformed
    	this.limitation_gui = new LimitationGUI(this.owner, this.acceleration_limitation);
        this.limitation_gui.setVisible(true);
        
        Limitation limitation = this.limitation_gui.getLimitation();
        if(limitation != null)
        	this.acceleration_limitation = (AccelerationLimitation) limitation;
    }//GEN-LAST:event_acceleration_edit_buttonActionPerformed
            
    /** Returns the Permission object configured by the GUI.
     * 
     *  @return The Permission object configured by the GUI. */
    public Permission getPermission() {
    	LinkedList<Limitation> limitations_list = new LinkedList<Limitation>();
    	
    	if(this.depth_check.isSelected())
    		limitations_list.add(this.depth_limitation);
    	
    	if(this.stamina_check.isSelected())
    		limitations_list.add(this.stamina_limitation);
    	
    	if(this.speed_check.isSelected())
    		limitations_list.add(this.speed_limitation);
    	
    	if(this.acceleration_check.isSelected())
    		limitations_list.add(this.acceleration_limitation);
    	    	
    	Limitation[] limitations = new Limitation[limitations_list.size()];
    	for(int i = 0; i < limitations.length; i++)
    		limitations[i] = limitations_list.get(i);
    	
    	this.permission.setLimitations(limitations);
    	return this.permission;
    }
    
    /* Attributes. */
    // added manually
    private Permission permission;
    private DepthLimitation depth_limitation;
    private StaminaLimitation stamina_limitation;
    private SpeedLimitation speed_limitation;
    private AccelerationLimitation acceleration_limitation;
    private LimitationGUI limitation_gui;
    private JDialog owner;
    
    // added by Eclipse
    private static final long serialVersionUID = -3742630409358062200L;
    
    // added by NetBeans IDE 3.6
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox acceleration_check;
    private javax.swing.JButton acceleration_edit_button;
    private javax.swing.JPanel acceleration_limitation_panel;	
    private javax.swing.JCheckBox depth_check;
    private javax.swing.JButton depth_edit_button;
    private javax.swing.JPanel depth_limitation_panel;
    private javax.swing.JPanel internal_panel;
    private javax.swing.JCheckBox stamina_check;
    private javax.swing.JButton stamina_edit_button;
    private javax.swing.JPanel stamina_limitation_panel;
    private javax.swing.JCheckBox speed_check;
    private javax.swing.JButton speed_edit_button;
    private javax.swing.JPanel speed_limitation_panel;    
    // End of variables declaration//GEN-END:variables
}