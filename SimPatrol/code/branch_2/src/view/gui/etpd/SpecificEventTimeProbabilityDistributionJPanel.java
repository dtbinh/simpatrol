/* SpecificEventTimeProbabilityDistributionJPanel.java */

/* The package of this class. */
package view.gui.etpd;

/* Imported classes and/or interfaces. */
import javax.swing.JOptionPane;
import model.etpd.SpecificEventTimeProbabilityDistribution;

/** Implements the GUI panel able to configure
 *  SpecificEventTimeProbabilityDistribution objects.
 *  
 *  @see SpecificEventTimeProbabilityDistribution */
public class SpecificEventTimeProbabilityDistributionJPanel extends EventTimeProbabilityDistributionJPanel {    
	/* Methods. */
	/** Constructor.
     * 
     *  @param etpd The SpecificEventTimeProbabilityDistribution object to be configured. */
    public SpecificEventTimeProbabilityDistributionJPanel(SpecificEventTimeProbabilityDistribution etpd) {
        this.initComponents();
        this.initComponents(etpd);
    }    
    
	/** Initiates the components of the GUI.
     *  Generated by NetBeans IDE 3.6. */
    private void initComponents() {//GEN-BEGIN:initComponents
        internal_panel = new javax.swing.JPanel();
        time_panel = new javax.swing.JPanel();
        time_label = new javax.swing.JLabel();
        time_field = new javax.swing.JTextField();
        time_unity_label = new javax.swing.JLabel();
        prob_panel = new javax.swing.JPanel();
        prob_label = new javax.swing.JLabel();
        prob_field = new javax.swing.JTextField();
        seed_panel = new javax.swing.JPanel();
        seed_label = new javax.swing.JLabel();
        seed_field = new javax.swing.JTextField();
        seed_button = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        internal_panel.setLayout(new java.awt.GridLayout(3, 0));

        time_panel.setLayout(new java.awt.BorderLayout());

        time_label.setText("Event time ");
        time_panel.add(time_label, java.awt.BorderLayout.WEST);

        time_field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        time_field.setText("0");
        time_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                time_fieldKeyReleased(evt);
            }
        });

        time_panel.add(time_field, java.awt.BorderLayout.CENTER);

        time_unity_label.setText(" seconds or cycles");
        time_panel.add(time_unity_label, java.awt.BorderLayout.EAST);

        internal_panel.add(time_panel);

        prob_panel.setLayout(new java.awt.BorderLayout());

        prob_label.setText("Probability value ");
        prob_panel.add(prob_label, java.awt.BorderLayout.WEST);

        prob_field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        prob_field.setText("0");
        prob_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prob_fieldKeyReleased(evt);
            }
        });

        prob_panel.add(prob_field, java.awt.BorderLayout.CENTER);

        internal_panel.add(prob_panel);

        seed_panel.setLayout(new java.awt.BorderLayout());

        seed_label.setText("Seed ");
        seed_panel.add(seed_label, java.awt.BorderLayout.WEST);

        seed_field.setEditable(false);
        seed_field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        this.seed_field.setText(String.valueOf((int) System.currentTimeMillis()));
        seed_panel.add(seed_field, java.awt.BorderLayout.CENTER);

        seed_button.setText("Generate");
        seed_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seed_buttonActionPerformed(evt);
            }
        });

        seed_panel.add(seed_button, java.awt.BorderLayout.EAST);

        internal_panel.add(seed_panel);

        add(internal_panel, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents
    
    /** Complements the initiation of the components of the GUI.
     * 
     *  @param etpd The SpecificEventTimeProbabilityDistribution object to be configured. */
    private void initComponents(SpecificEventTimeProbabilityDistribution etpd) {
        this.etpd = etpd;
        
        this.prob_field.setText(String.valueOf(this.etpd.getProbability()));
        this.time_field.setText(String.valueOf(this.etpd.getTime()));
        this.seed_field.setText(String.valueOf(this.etpd.getSeed()));
    }
    
    /** Executed when the seed_button is pressed.
     *  Generated by NetBeans IDE 3.6. */
    private void seed_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seed_buttonActionPerformed
        this.seed_field.setText(String.valueOf((int) System.currentTimeMillis()));
    }//GEN-LAST:event_seed_buttonActionPerformed
    
    /** Executed when the prob_field changes.
     *  Generated by NetBeans IDE 3.6. */
    private void prob_fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prob_fieldKeyReleased
        String str_probability = this.prob_field.getText().trim();        
        if(str_probability.length() > 0)
            try {
                double probability = Double.parseDouble(str_probability);
                
                if(probability < 0 || probability > 1)
                    throw new NumberFormatException();
            }
            catch(NumberFormatException e) {
                if(str_probability.charAt(str_probability.length() - 1) != '.') {
                    JOptionPane.showMessageDialog(this, "The probability value must be a real number.", "Probability value error.", JOptionPane.ERROR_MESSAGE);
                    this.prob_field.setText("0");
                }
            }
    }//GEN-LAST:event_prob_fieldKeyReleased
    
    /** Executed when the time_field changes.
     *  Generated by NetBeans IDE 3.6. */
    private void time_fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_time_fieldKeyReleased
        String str_time = this.time_field.getText().trim();
        
        if(str_time.length() > 0)
            try {
            	Integer.parseInt(str_time);            
            }
            catch(NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "The time value must be an integer.", "Time value error.", JOptionPane.ERROR_MESSAGE);
                this.time_field.setText("0");
            }
    }//GEN-LAST:event_time_fieldKeyReleased
    
    public model.etpd.EventTimeProbabilityDistribution getETPD() {
    	try {
            int time = Integer.parseInt(this.time_field.getText().trim());
            double probability = Double.parseDouble(this.prob_field.getText().trim());
            int seed = Integer.parseInt(this.seed_field.getText().trim());
            
            this.etpd = new SpecificEventTimeProbabilityDistribution(seed, probability, time);
        }
        catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "The time and probability values must be correct.", "Probability value error.", JOptionPane.ERROR_MESSAGE);
            
            if(this.etpd == null) {
                this.time_field.setText("0");
                this.prob_field.setText("0");
            }
            else this.initComponents(this.etpd);
        }
        
        return this.etpd;
    }
    
    /* Attributes. */
    // added manually   
    private SpecificEventTimeProbabilityDistribution etpd;
    
    // added by Eclipse
	private static final long serialVersionUID = -7401362576081579106L;
    
    // added by NetBeans IDE 3.6
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel internal_panel;
    private javax.swing.JTextField prob_field;
    private javax.swing.JLabel prob_label;
    private javax.swing.JPanel prob_panel;
    private javax.swing.JButton seed_button;
    private javax.swing.JTextField seed_field;
    private javax.swing.JLabel seed_label;
    private javax.swing.JPanel seed_panel;
    private javax.swing.JTextField time_field;
    private javax.swing.JLabel time_label;
    private javax.swing.JPanel time_panel;
    private javax.swing.JLabel time_unity_label;
    // End of variables declaration//GEN-END:variables
}